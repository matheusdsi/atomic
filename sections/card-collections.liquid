{%- comment -%}
  Carrossel de Cards Configuráveis
  Esta seção cria um carrossel de cards com imagens e textos configuráveis.
  No mobile, exibe um carrossel deslizável, no desktop exibe 4 itens lado a lado.
{%- endcomment -%}

<style>
  #shopify-section-{{ section.id }} {
    --card-aspect-ratio: {{ section.settings.image_ratio }};
    --card-border-radius: {{ section.settings.border_radius }}px;
    --card-overlay-opacity: {{ section.settings.overlay_opacity | divided_by: 100.0 }};
    --card-overlay-color: {{ section.settings.overlay_color }};
    --card-text-color: {{ section.settings.text_color }};
    --card-zoom-scale: {{ section.settings.zoom_scale | divided_by: 100.0 | plus: 1 }};
    --card-transition-duration: {{ section.settings.transition_duration }}ms;
    --card-shadow-opacity: {{ section.settings.shadow_opacity | divided_by: 100.0 }};
    --card-shadow-blur: {{ section.settings.shadow_blur }}px;
    --card-gap: {{ section.settings.gap }}px;
    --section-background: {{ section.settings.background_color }};
  }
  
  .card-collections {
    background-color: rgb(var(--section-background));
    padding: {{ section.settings.padding_top }}px 0 {{ section.settings.padding_bottom }}px 0;
  }
  
  .card-collections__heading {
    text-align: {{ section.settings.heading_alignment }};
    margin-bottom: 30px;
  }
  
  .card-collections__title {
    margin: 0;
    font-size: 28px;
    font-weight: 600;
  }
  
  .card-collections__subtitle {
    margin-top: 10px;
    font-size: 16px;
    opacity: 0.85;
  }
  
  .card-collections__grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: var(--card-gap);
    overflow: visible;
  }
  
  @media screen and (min-width: 750px) {
    .card-collections__grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media screen and (min-width: 990px) {
    .card-collections__grid {
      grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
    }
    
    .card-collections__title {
      font-size: 32px;
    }
  }
  
  .card-collections__card {
    position: relative;
    overflow: hidden;
    border-radius: var(--card-border-radius);
    box-shadow: 0 {{ section.settings.shadow_offset }}px var(--card-shadow-blur) rgba(0, 0, 0, var(--card-shadow-opacity));
    transition: transform var(--card-transition-duration) ease-out;
  }
  
  .card-collections__card:hover {
    transform: {{ section.settings.hover_effect }};
  }
  
  .card-collections__card-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }
  
  .card-collections__image-wrapper {
    position: relative;
    overflow: hidden;
    padding-bottom: var(--card-aspect-ratio);
  }
  
  .card-collections__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--card-transition-duration) ease-out;
  }
  
  .card-collections__card:hover .card-collections__image {
    transform: scale(var(--card-zoom-scale));
  }
  
  .card-collections__content {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 20px;
    color: rgb(var(--card-text-color));
    z-index: 2;
  }
  
  .card-collections__overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(var(--card-overlay-color));
    opacity: var(--card-overlay-opacity);
    z-index: 1;
  }
  
  .card-collections__subheading {
    font-size: 14px;
    margin: 0 0 5px 0;
    font-weight: 500;
  }
  
  .card-collections__heading-text {
    font-size: 22px;
    margin: 0;
    font-weight: 600;
  }
  
  .card-collections__arrow {
    position: absolute;
    top: 50%;
    left: 20px;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    background-color: rgb(var(--card-text-color));
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity var(--card-transition-duration) ease-out;
    z-index: 3;
  }
  
  .card-collections__arrow svg {
    width: 24px;
    height: 24px;
    fill: rgb(var(--card-overlay-color));
  }
  
  .card-collections__card:hover .card-collections__arrow {
    opacity: 1;
  }
  
  /* Mobile carousel styles */
  @media screen and (max-width: 989px) {
    .card-collections__carousel {
      display: flex;
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      -webkit-overflow-scrolling: touch;
      scroll-behavior: smooth;
      -ms-overflow-style: none;
      scrollbar-width: none;
      gap: var(--card-gap);
      padding-bottom: 20px;
    }
    
    .card-collections__carousel::-webkit-scrollbar {
      display: none;
    }
    
    .card-collections__carousel .card-collections__card {
      flex: 0 0 {{ section.settings.card_width_mobile }}%;
      scroll-snap-align: start;
      width: {{ section.settings.card_width_mobile }}%;
    }
  }
  
  /* Carousel controls */
  .card-collections__controls {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 20px;
  }
  
  .card-collections__control-button {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: #fff;
    border: 1px solid rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  
  .card-collections__control-button:hover {
    background-color: #f5f5f5;
  }
  
  .card-collections__control-button:disabled {
    opacity: 0.5;
    cursor: default;
  }
  
  .card-collections__control-button svg {
    width: 20px;
    height: 20px;
  }
</style>

<div class="card-collections section">
  <div class="page-width">
    {%- if section.settings.title != blank or section.settings.subtitle != blank -%}
      <div class="card-collections__heading">
        {%- if section.settings.title != blank -%}
          <h2 class="card-collections__title">{{ section.settings.title }}</h2>
        {%- endif -%}
        {%- if section.settings.subtitle != blank -%}
          <div class="card-collections__subtitle">{{ section.settings.subtitle }}</div>
        {%- endif -%}
      </div>
    {%- endif -%}
    
    <div class="card-collections__grid">
      <div class="card-collections__carousel" id="card-carousel-{{ section.id }}">
        {%- for block in section.blocks -%}
          <div class="card-collections__card" {{ block.shopify_attributes }}>
            <a href="{{ block.settings.link }}" class="card-collections__card-link">
              <div class="card-collections__image-wrapper">
                {%- if block.settings.image != blank -%}
                  <img
                    srcset="{{ block.settings.image | img_url: '200x' }} 200w,
                            {{ block.settings.image | img_url: '300x' }} 300w,
                            {{ block.settings.image | img_url: '400x' }} 400w,
                            {{ block.settings.image | img_url: '500x' }} 500w,
                            {{ block.settings.image | img_url: '600x' }} 600w,
                            {{ block.settings.image | img_url: '800x' }} 800w,
                            {{ block.settings.image | img_url: '1000x' }} 1000w,
                            {{ block.settings.image | img_url: '1200x' }} 1200w"
                    src="{{ block.settings.image | img_url: '800x' }}"
                    sizes="(min-width: 990px) 25vw, (min-width: 750px) 50vw, 100vw"
                    alt="{{ block.settings.image.alt | escape }}"
                    width="{{ block.settings.image.width }}"
                    height="{{ block.settings.image.height }}"
                    loading="lazy"
                    class="card-collections__image">
                {%- else -%}
                  {{ 'collection-' | append: forloop.index | placeholder_svg_tag: 'card-collections__image placeholder-svg' }}
                {%- endif -%}
                <div class="card-collections__overlay"></div>
                <div class="card-collections__arrow">
                  <svg viewBox="0 0 24 24">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12ZM10.47 9.53 12.94 12l-2.47 2.47 1.06 1.06 3-3 .53-.53-.53-.53-3-3-1.06 1.06Z"></path>
                  </svg>
                </div>
              </div>
              <div class="card-collections__content">
                {%- if block.settings.subheading != blank -%}
                  <p class="card-collections__subheading">{{ block.settings.subheading }}</p>
                {%- endif -%}
                {%- if block.settings.heading != blank -%}
                  <h3 class="card-collections__heading-text">{{ block.settings.heading }}</h3>
                {%- endif -%}
              </div>
            </a>
          </div>
        {%- endfor -%}
      </div>
    </div>
    
    {%- if section.settings.show_controls and section.blocks.size > section.settings.columns_desktop -%}
      <div class="card-collections__controls">
        <button class="card-collections__control-button card-collections__prev" aria-label="{{ 'general.accessibility.previous' | t }}" disabled>
          <svg viewBox="0 0 24 24">
            <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"></path>
          </svg>
        </button>
        <button class="card-collections__control-button card-collections__next" aria-label="{{ 'general.accessibility.next' | t }}">
          <svg viewBox="0 0 24 24">
            <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"></path>
          </svg>
        </button>
      </div>
    {%- endif -%}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const carousel = document.getElementById('card-carousel-{{ section.id }}');
    const prevButton = document.querySelector('#shopify-section-{{ section.id }} .card-collections__prev');
    const nextButton = document.querySelector('#shopify-section-{{ section.id }} .card-collections__next');
    
    if (carousel && prevButton && nextButton) {
      const scrollAmount = carousel.offsetWidth * 0.8;
      
      function updateButtonState() {
        prevButton.disabled = carousel.scrollLeft <= 0;
        nextButton.disabled = carousel.scrollLeft + carousel.offsetWidth >= carousel.scrollWidth - 10;
      }
      
      prevButton.addEventListener('click', function() {
        carousel.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
        setTimeout(updateButtonState, 500);
      });
      
      nextButton.addEventListener('click', function() {
        carousel.scrollBy({ left: scrollAmount, behavior: 'smooth' });
        setTimeout(updateButtonState, 500);
      });
      
      carousel.addEventListener('scroll', updateButtonState);
      window.addEventListener('resize', updateButtonState);
      
      // Initial button state
      updateButtonState();
    }
  });
</script>

{% schema %}
{
  "name": "Cards Carrossel",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Título",
      "default": "Coleções em destaque"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtítulo"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Alinhamento do título",
      "options": [
        {
          "value": "left",
          "label": "Esquerda"
        },
        {
          "value": "center",
          "label": "Centro"
        },
        {
          "value": "right",
          "label": "Direita"
        }
      ],
      "default": "center"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Cor de fundo",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "label": "Número de colunas no desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "card_width_mobile",
      "label": "Largura do card no mobile (%)",
      "min": 50,
      "max": 100,
      "step": 5,
      "default": 80
    },
    {
      "type": "range",
      "id": "gap",
      "label": "Espaçamento entre cards (px)",
      "min": 0,
      "max": 40,
      "step": 4,
      "default": 16
    },
    {
      "type": "checkbox",
      "id": "show_controls",
      "label": "Mostrar controles de navegação",
      "default": true
    },
    {
      "type": "header",
      "content": "Estilo dos Cards"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "label": "Proporção da imagem",
      "options": [
        {
          "value": "100%",
          "label": "1:1 (Quadrado)"
        },
        {
          "value": "125%",
          "label": "4:5"
        },
        {
          "value": "133.33%",
          "label": "3:4"
        },
        {
          "value": "150%",
          "label": "2:3"
        },
        {
          "value": "56.25%",
          "label": "16:9"
        },
        {
          "value": "66.66%",
          "label": "3:2"
        },
        {
          "value": "75%",
          "label": "4:3"
        }
      ],
      "default": "133.33%"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Raio da borda (px)",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 8
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "Opacidade da sobreposição (%)",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 15
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "Cor da sobreposição",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Cor do texto",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Efeitos"
    },
    {
      "type": "range",
      "id": "zoom_scale",
      "label": "Escala de zoom (%)",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 5
    },
    {
      "type": "select",
      "id": "hover_effect",
      "label": "Efeito ao passar o mouse",
      "options": [
        {
          "value": "none",
          "label": "Nenhum"
        },
        {
          "value": "translateY(-5px)",
          "label": "Elevação"
        },
        {
          "value": "scale(1.03)",
          "label": "Escala"
        }
      ],
      "default": "translateY(-5px)"
    },
    {
      "type": "range",
      "id": "transition_duration",
      "label": "Duração da transição (ms)",
      "min": 100,
      "max": 500,
      "step": 50,
      "default": 300
    },
    {
      "type": "header",
      "content": "Sombra"
    },
    {
      "type": "range",
      "id": "shadow_opacity",
      "label": "Opacidade da sombra (%)",
      "min": 0,
      "max": 30,
      "step": 1,
      "default": 10
    },
    {
      "type": "range",
      "id": "shadow_blur",
      "label": "Desfoque da sombra (px)",
      "min": 0,
      "max": 20,
      "step": 2,
      "default": 10
    },
    {
      "type": "range",
      "id": "shadow_offset",
      "label": "Deslocamento da sombra (px)",
      "min": 0,
      "max": 10,
      "step": 1,
      "default": 4
    },
    {
      "type": "header",
      "content": "Espaçamento"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Espaçamento superior (px)",
      "min": 0,
      "max": 100,
      "step": 4,
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Espaçamento inferior (px)",
      "min": 0,
      "max": 100,
      "step": 4,
      "default": 40
    }
  ],
  "blocks": [
    {
      "type": "card",
      "name": "Card",
      "limit": 12,
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Imagem"
        },
        {
          "type": "text",
          "id": "subheading",
          "label": "Subtítulo",
          "default": "COLEÇÃO"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Título",
          "default": "Nome da coleção"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Cards Carrossel",
      "blocks": [
        {
          "type": "card"
        },
        {
          "type": "card"
        },
        {
          "type": "card"
        },
        {
          "type": "card"
        }
      ]
    }
  ]
}
{% endschema %}
